Test 588 (moul_d_7) : FAILED.
    First line of code: {return test("%d", INT_MIN);}
      expected output : "-2147483648"
      your output     : "--2147483648"
      expected (nonprintable as hex) : "-2147483648"
      actual   (nonprintable as hex) : "--2147483648"

Test 590 (moul_d_9) : FAILED.
    First line of code: {return test("%d", INT_MAX + 1);}
      expected output : "-2147483648"
      your output     : "--2147483648"
      expected (nonprintable as hex) : "-2147483648"
      actual   (nonprintable as hex) : "--2147483648"

Test 594 (moul_mix_1) : FAILED.
    First line of code: {int r00 = 0; return test("Lalalala, %d%% des gens qui parlent à Ly adorent %s. Ou Presque. %p", 100, "Ly", &r00);}
      expected output : "Lalalala, 100% des gens qui parlent à Ly adorent Ly. Ou Presque. 0x7ffee954663c"
      your output     : "Lalalala, 100% des gens qui parlent à Ly adorent Ly. Ou Presque. "
      expected (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. 0x7ffee954663c"
      actual   (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. "

Test 601 (moul_i_7) : FAILED.
    First line of code: {return test("%i", INT_MIN);}
      expected output : "-2147483648"
      your output     : "--2147483648"
      expected (nonprintable as hex) : "-2147483648"
      actual   (nonprintable as hex) : "--2147483648"

Test 603 (moul_i_9) : FAILED.
    First line of code: {return test("%i", INT_MAX + 1);}
      expected output : "-2147483648"
      your output     : "--2147483648"
      expected (nonprintable as hex) : "-2147483648"
      actual   (nonprintable as hex) : "--2147483648"

Test 607 (moul_u_1) : FAILED.
    First line of code: {return test("%u", 42);}
      expected output : "42"
      your output     : ""
      expected (nonprintable as hex) : "42"
      actual   (nonprintable as hex) : ""

Test 608 (moul_u_2) : FAILED.
    First line of code: {return test("Kashim a %u histoires à raconter", 1001);}
      expected output : "Kashim a 1001 histoires à raconter"
      your output     : "Kashim a  histoires à raconter"
      expected (nonprintable as hex) : "Kashim a 1001 histoires \xc3\xa0 raconter"
      actual   (nonprintable as hex) : "Kashim a  histoires \xc3\xa0 raconter"

Test 609 (moul_u_3) : FAILED.
    First line of code: {return test("Il fait au moins %u
", -8000);}
      expected output : "Il fait au moins 4294959296
"
      your output     : "Il fait au moins 
"
      expected (nonprintable as hex) : "Il fait au moins 4294959296\x0a"
      actual   (nonprintable as hex) : "Il fait au moins \x0a"

Test 610 (moul_u_4) : FAILED.
    First line of code: {return test("%u", -0);}
      expected output : "0"
      your output     : ""
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : ""

Test 611 (moul_u_5) : FAILED.
    First line of code: {return test("%u", 0);}
      expected output : "0"
      your output     : ""
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : ""

Test 612 (moul_u_6) : FAILED.
    First line of code: {return test("%u", INT_MAX);}
      expected output : "2147483647"
      your output     : ""
      expected (nonprintable as hex) : "2147483647"
      actual   (nonprintable as hex) : ""

Test 613 (moul_u_7) : FAILED.
    First line of code: {return test("%u", INT_MIN);}
      expected output : "2147483648"
      your output     : ""
      expected (nonprintable as hex) : "2147483648"
      actual   (nonprintable as hex) : ""

Test 614 (moul_u_8) : FAILED.
    First line of code: {return test("%u", INT_MIN - 1);}
      expected output : "2147483647"
      your output     : ""
      expected (nonprintable as hex) : "2147483647"
      actual   (nonprintable as hex) : ""

Test 615 (moul_u_9) : FAILED.
    First line of code: {return test("%u", INT_MAX + 1);}
      expected output : "2147483648"
      your output     : ""
      expected (nonprintable as hex) : "2147483648"
      actual   (nonprintable as hex) : ""

Test 616 (moul_u_10) : FAILED.
    First line of code: {return test("%%u 0000042 == |%u|
", 0000042);}
      expected output : "%u 0000042 == |34|
"
      your output     : "%u 0000042 == ||
"
      expected (nonprintable as hex) : "%u 0000042 == |34|\x0a"
      actual   (nonprintable as hex) : "%u 0000042 == ||\x0a"

Test 617 (moul_u_11) : FAILED.
    First line of code: {return test("%%u 	 == |%u|
", '	');}
      expected output : "%u 	 == |9|
"
      your output     : "%u 	 == ||
"
      expected (nonprintable as hex) : "%u \x09 == |9|\x0a"
      actual   (nonprintable as hex) : "%u \x09 == ||\x0a"

Test 618 (moul_u_12) : FAILED.
    First line of code: {return test("%%u Lydie == |%u|
", 'L'+'y'+'d'+'i'+'e');}
      expected output : "%u Lydie == |503|
"
      your output     : "%u Lydie == ||
"
      expected (nonprintable as hex) : "%u Lydie == |503|\x0a"
      actual   (nonprintable as hex) : "%u Lydie == ||\x0a"

Test 619 (moul_x_1) : FAILED.
    First line of code: {return test("%x", 42);}
      expected output : "2a"
      your output     : ""
      expected (nonprintable as hex) : "2a"
      actual   (nonprintable as hex) : ""

Test 620 (moul_x_2) : FAILED.
    First line of code: {return test("Kashim a %x histoires à raconter", 1001);}
      expected output : "Kashim a 3e9 histoires à raconter"
      your output     : "Kashim a  histoires à raconter"
      expected (nonprintable as hex) : "Kashim a 3e9 histoires \xc3\xa0 raconter"
      actual   (nonprintable as hex) : "Kashim a  histoires \xc3\xa0 raconter"

Test 621 (moul_x_3) : FAILED.
    First line of code: {return test("Il fait au moins %x
", -8000);}
      expected output : "Il fait au moins ffffe0c0
"
      your output     : "Il fait au moins 
"
      expected (nonprintable as hex) : "Il fait au moins ffffe0c0\x0a"
      actual   (nonprintable as hex) : "Il fait au moins \x0a"

Test 622 (moul_x_4) : FAILED.
    First line of code: {return test("%x", -0);}
      expected output : "0"
      your output     : ""
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : ""

Test 623 (moul_x_5) : FAILED.
    First line of code: {return test("%x", 0);}
      expected output : "0"
      your output     : ""
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : ""

Test 624 (moul_x_6) : FAILED.
    First line of code: {return test("%x", INT_MAX);}
      expected output : "7fffffff"
      your output     : ""
      expected (nonprintable as hex) : "7fffffff"
      actual   (nonprintable as hex) : ""

Test 625 (moul_x_7) : FAILED.
    First line of code: {return test("%x", INT_MIN);}
      expected output : "80000000"
      your output     : ""
      expected (nonprintable as hex) : "80000000"
      actual   (nonprintable as hex) : ""

Test 626 (moul_x_8) : FAILED.
    First line of code: {return test("%x", INT_MIN - 1);}
      expected output : "7fffffff"
      your output     : ""
      expected (nonprintable as hex) : "7fffffff"
      actual   (nonprintable as hex) : ""

Test 627 (moul_x_9) : FAILED.
    First line of code: {return test("%x", INT_MAX + 1);}
      expected output : "80000000"
      your output     : ""
      expected (nonprintable as hex) : "80000000"
      actual   (nonprintable as hex) : ""

Test 628 (moul_x_10) : FAILED.
    First line of code: {return test("%%x 0000042 == |%x|
", 0000042);}
      expected output : "%x 0000042 == |22|
"
      your output     : "%x 0000042 == ||
"
      expected (nonprintable as hex) : "%x 0000042 == |22|\x0a"
      actual   (nonprintable as hex) : "%x 0000042 == ||\x0a"

Test 629 (moul_x_11) : FAILED.
    First line of code: {return test("%%x 	 == |%x|
", '	');}
      expected output : "%x 	 == |9|
"
      your output     : "%x 	 == ||
"
      expected (nonprintable as hex) : "%x \x09 == |9|\x0a"
      actual   (nonprintable as hex) : "%x \x09 == ||\x0a"

Test 630 (moul_x_12) : FAILED.
    First line of code: {return test("%%x Lydie == |%x|
", 'L'+'y'+'d'+'i'+'e');}
      expected output : "%x Lydie == |1f7|
"
      your output     : "%x Lydie == ||
"
      expected (nonprintable as hex) : "%x Lydie == |1f7|\x0a"
      actual   (nonprintable as hex) : "%x Lydie == ||\x0a"

Test 640 (moul_leftjusty_2) : FAILED.
    First line of code: {return test("%%-d 42 == %-d
", INT_MIN);}
      expected output : "%-d 42 == -2147483648
"
      your output     : "%-d 42 == --2147483648
"
      expected (nonprintable as hex) : "%-d 42 == -2147483648\x0a"
      actual   (nonprintable as hex) : "%-d 42 == --2147483648\x0a"

Test 647 (moul_star_2) : FAILED.
    First line of code: {return test("%% *.5i 42 == |% *.5i|
", 4, 42);}
      expected output : "% *.5i 42 == | 00042|
"
      your output     : "% *.5i 42 == |00042|
"
      expected (nonprintable as hex) : "% *.5i 42 == | 00042|\x0a"
      actual   (nonprintable as hex) : "% *.5i 42 == |00042|\x0a"

