Test  43 (s_string_prec_trunc) : FAILED.
    First line of code: {return test("%.3s", "hello");}
      expected output : "hel"
      your output     : "hello"
      expected (nonprintable as hex) : "hel"
      actual   (nonprintable as hex) : "hello"

Test  44 (s_string_prec_default) : FAILED.
    First line of code: {return test("%.s", "hello");}
      expected output : ""
      your output     : "hello"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "hello"

Test  45 (s_string_prec_zero) : FAILED.
    First line of code: {return test("%.0s", "hello");}
      expected output : ""
      your output     : "hello"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "hello"

Test  46 (s_two_strings_prec_2trunc) : FAILED.
    First line of code: {return test("%.3s%.2s", "holla", "bitch");}
      expected output : "holbi"
      your output     : "hollabitch"
      expected (nonprintable as hex) : "holbi"
      actual   (nonprintable as hex) : "hollabitch"

Test  47 (s_two_strings_prec_1trunc_a) : FAILED.
    First line of code: {return test("%.2s%.7s", "hello", "world");}
      expected output : "heworld"
      your output     : "helloworld"
      expected (nonprintable as hex) : "heworld"
      actual   (nonprintable as hex) : "helloworld"

Test  48 (s_two_strings_prec_1trunc_b) : FAILED.
    First line of code: {return test("%.7s%.2s", "hello", "world");}
      expected output : "hellowo"
      your output     : "helloworld"
      expected (nonprintable as hex) : "hellowo"
      actual   (nonprintable as hex) : "helloworld"

Test  51 (s_string_prec_width_trunc) : FAILED.
    First line of code: {return test("%7.5s", "bombastic");}
      expected output : "  bomba"
      your output     : "bombastic"
      expected (nonprintable as hex) : "  bomba"
      actual   (nonprintable as hex) : "bombastic"

Test  53 (s_string_prec_width_trunc_lj) : FAILED.
    First line of code: {return test("%-7.5s", "tubular");}
      expected output : "tubul  "
      your output     : "tubular"
      expected (nonprintable as hex) : "tubul  "
      actual   (nonprintable as hex) : "tubular"

Test  58 (s_two_s_prec_width_2fit_1trunc_a) : FAILED.
    First line of code: {return test("%7.3s%7.7s", "hello", "world");}
      expected output : "    hel  world"
      your output     : "  hello  world"
      expected (nonprintable as hex) : "    hel  world"
      actual   (nonprintable as hex) : "  hello  world"

Test  59 (s_two_s_prec_width_1fit_a_1trunc_a) : FAILED.
    First line of code: {return test("%3.3s%7.7s", "hello", "world");}
      expected output : "hel  world"
      your output     : "hello  world"
      expected (nonprintable as hex) : "hel  world"
      actual   (nonprintable as hex) : "hello  world"

Test  60 (s_two_s_prec_width_1fit_b_1trunc_a) : FAILED.
    First line of code: {return test("%7.3s%3.7s", "hello", "world");}
      expected output : "    helworld"
      your output     : "  helloworld"
      expected (nonprintable as hex) : "    helworld"
      actual   (nonprintable as hex) : "  helloworld"

Test  61 (s_two_s_prec_width_0fit_1trunc_a) : FAILED.
    First line of code: {return test("%3.3s%3.7s", "hello", "world");}
      expected output : "helworld"
      your output     : "helloworld"
      expected (nonprintable as hex) : "helworld"
      actual   (nonprintable as hex) : "helloworld"

Test  62 (s_two_s_prec_width_2fit_1trunc_b) : FAILED.
    First line of code: {return test("%7.7s%7.3s", "hello", "world");}
      expected output : "  hello    wor"
      your output     : "  hello  world"
      expected (nonprintable as hex) : "  hello    wor"
      actual   (nonprintable as hex) : "  hello  world"

Test  63 (s_two_s_prec_width_1fit_a_1trunc_b) : FAILED.
    First line of code: {return test("%3.7s%7.3s", "hello", "world");}
      expected output : "hello    wor"
      your output     : "hello  world"
      expected (nonprintable as hex) : "hello    wor"
      actual   (nonprintable as hex) : "hello  world"

Test  64 (s_two_s_prec_width_1fit_b_1trunc_b) : FAILED.
    First line of code: {return test("%7.7s%3.3s", "hello", "world");}
      expected output : "  hellowor"
      your output     : "  helloworld"
      expected (nonprintable as hex) : "  hellowor"
      actual   (nonprintable as hex) : "  helloworld"

Test  65 (s_two_s_prec_width_0fit_1trunc_b) : FAILED.
    First line of code: {return test("%3.7s%3.3s", "hello", "world");}
      expected output : "hellowor"
      your output     : "helloworld"
      expected (nonprintable as hex) : "hellowor"
      actual   (nonprintable as hex) : "helloworld"

Test  66 (s_two_s_prec_width_2fit_2trunc) : FAILED.
    First line of code: {return test("%7.3s%7.3s", "hello", "world");}
      expected output : "    hel    wor"
      your output     : "  hello  world"
      expected (nonprintable as hex) : "    hel    wor"
      actual   (nonprintable as hex) : "  hello  world"

Test  67 (s_two_s_prec_width_1fit_a_2trunc) : FAILED.
    First line of code: {return test("%3.3s%7.3s", "hello", "world");}
      expected output : "hel    wor"
      your output     : "hello  world"
      expected (nonprintable as hex) : "hel    wor"
      actual   (nonprintable as hex) : "hello  world"

Test  68 (s_two_s_prec_width_1fit_b_2trunc) : FAILED.
    First line of code: {return test("%7.3s%3.3s", "hello", "world");}
      expected output : "    helwor"
      your output     : "  helloworld"
      expected (nonprintable as hex) : "    helwor"
      actual   (nonprintable as hex) : "  helloworld"

Test  69 (s_two_s_prec_width_0fit_2trunc) : FAILED.
    First line of code: {return test("%3.3s%3.3s", "hello", "world");}
      expected output : "helwor"
      your output     : "helloworld"
      expected (nonprintable as hex) : "helwor"
      actual   (nonprintable as hex) : "helloworld"

Test  73 (s_null_basic_string_expansion) : FAILED.
    First line of code: {return test("hello, %s.", NULL);}
    SEGFAULT

Test  74 (s_null_only_string_expansion) : FAILED.
    First line of code: {return test("%s", NULL);}
    SEGFAULT

Test  75 (s_null_space_padded_field_width) : FAILED.
    First line of code: {return test("%32s", NULL);}
    SEGFAULT

Test  76 (s_null_space_padded_over_field_width) : FAILED.
    First line of code: {return test("%2s", NULL);}
    SEGFAULT

Test  77 (s_null_space_padded_field_width_lj) : FAILED.
    First line of code: {return test("%-32s", NULL);}
    SEGFAULT

Test  78 (s_null_space_padded_field_width2_lj) : FAILED.
    First line of code: {return test("%-16s", NULL);}
    SEGFAULT

Test  79 (s_null_space_padded_over_field_width_lj) : FAILED.
    First line of code: {return test("%-3s", NULL);}
    SEGFAULT

Test  81 (s_null_string_prec_trunc) : FAILED.
    First line of code: {return test("%.3s", "NULL");}
      expected output : "NUL"
      your output     : "NULL"
      expected (nonprintable as hex) : "NUL"
      actual   (nonprintable as hex) : "NULL"

Test  82 (s_null_string_prec_default) : FAILED.
    First line of code: {return test("%.s", "NULL");}
      expected output : ""
      your output     : "NULL"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "NULL"

Test  83 (s_null_string_prec_zero) : FAILED.
    First line of code: {return test("%.0s", "NULL");}
      expected output : ""
      your output     : "NULL"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "NULL"

Test  87 (s_prec_no_width_s_hidden) : FAILED.
    First line of code: {return test("%.s", s_hidden);}
      expected output : ""
      your output     : "hi low"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "hi low"

Test  89 (s_prec_03_no_width_s_hidden) : FAILED.
    First line of code: {return test("%.03s", s_hidden);}
      expected output : "hi "
      your output     : "hi low"
      expected (nonprintable as hex) : "hi "
      actual   (nonprintable as hex) : "hi low"

Test  91 (s_prec_03_no_width_s_null) : FAILED.
    First line of code: {return test("%.03s", NULL);}
    SEGFAULT

Test  92 (s_prec_09_no_width_s_null) : FAILED.
    First line of code: {return test("%.09s", NULL);}
    SEGFAULT

Test  97 (s_prec_0_width_3_s_hidden) : FAILED.
    First line of code: {return test("%3.s", s_hidden);}
      expected output : "   "
      your output     : "hi low"
      expected (nonprintable as hex) : "   "
      actual   (nonprintable as hex) : "hi low"

Test  98 (s_prec_0_width_10_s_hidden) : FAILED.
    First line of code: {return test("%10.s", s_hidden);}
      expected output : "          "
      your output     : "    hi low"
      expected (nonprintable as hex) : "          "
      actual   (nonprintable as hex) : "    hi low"

Test  99 (s_prec_0_width_3_s_null) : FAILED.
    First line of code: {return test("%3.s", NULL);}
    SEGFAULT

Test 100 (s_prec_0_width_10_s_null) : FAILED.
    First line of code: {return test("%10.s", NULL);}
    SEGFAULT

Test 104 (s_prec_0_lj_width_3_s_hidden) : FAILED.
    First line of code: {return test("%-3.s", s_hidden);}
      expected output : "   "
      your output     : "hi low"
      expected (nonprintable as hex) : "   "
      actual   (nonprintable as hex) : "hi low"

Test 105 (s_prec_0_lj_width_8_s_hidden) : FAILED.
    First line of code: {return test("%-8.s", s_hidden);}
      expected output : "        "
      your output     : "hi low  "
      expected (nonprintable as hex) : "        "
      actual   (nonprintable as hex) : "hi low  "

Test 106 (s_prec_0_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.s", NULL);}
    SEGFAULT

Test 107 (s_prec_0_lj_width_8_s_null) : FAILED.
    First line of code: {return test("%-8.s", NULL);}
    SEGFAULT

Test 111 (s_prec_1_width_3_s_hidden) : FAILED.
    First line of code: {return test("%3.1s", s_hidden);}
      expected output : "  h"
      your output     : "hi low"
      expected (nonprintable as hex) : "  h"
      actual   (nonprintable as hex) : "hi low"

Test 112 (s_prec_1_width_10_s_hidden) : FAILED.
    First line of code: {return test("%10.1s", s_hidden);}
      expected output : "         h"
      your output     : "    hi low"
      expected (nonprintable as hex) : "         h"
      actual   (nonprintable as hex) : "    hi low"

Test 113 (s_prec_1_width_3_s_null) : FAILED.
    First line of code: {return test("%3.1s", NULL);}
    SEGFAULT

Test 114 (s_prec_1_width_9_s_null) : FAILED.
    First line of code: {return test("%9.1s", NULL);}
    SEGFAULT

Test 115 (s_prec_1_lj_width_3_s_hidden) : FAILED.
    First line of code: {return test("%-3.1s", s_hidden);}
      expected output : "h  "
      your output     : "hi low"
      expected (nonprintable as hex) : "h  "
      actual   (nonprintable as hex) : "hi low"

Test 116 (s_prec_1_lj_width_10_s_hidden) : FAILED.
    First line of code: {return test("%-10.1s", s_hidden);}
      expected output : "h         "
      your output     : "hi low    "
      expected (nonprintable as hex) : "h         "
      actual   (nonprintable as hex) : "hi low    "

Test 117 (s_prec_1_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.1s", NULL);}
    SEGFAULT

Test 118 (s_prec_1_lj_width_9_s_null) : FAILED.
    First line of code: {return test("%-9.1s", NULL);}
    SEGFAULT

Test 123 (s_prec_perfect_width_3_s_null) : FAILED.
    First line of code: {return test("%3.6s", NULL);}
    SEGFAULT

Test 124 (s_prec_perfect_width_20_s_null) : FAILED.
    First line of code: {return test("%20.6s", NULL);}
    SEGFAULT

Test 131 (s_prec_8_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.8s", NULL);}
    SEGFAULT

Test 132 (s_prec_8_lj_width_10_s_null) : FAILED.
    First line of code: {return test("%-10.8s", NULL);}
    SEGFAULT

Test 133 (s_prec_00_lj_s_hidden_trunc) : FAILED.
    First line of code: {return test("%-.00s", s_hidden);}
      expected output : ""
      your output     : "hi low"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "hi low"

Test 4201 (s_neg_prec_star_01) : FAILED.
    First line of code: {return test("%.*s", -3, 0);}
    SEGFAULT

Test 4202 (s_neg_prec_star_02) : FAILED.
    First line of code: {return test("%.*s", -1, 0);}
    SEGFAULT

